# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
INCLUDES +=
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LDDEPS +=
LINKCMD = $(CC) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
TARGETDIR = Debug
TARGET = $(TARGETDIR)/sdraw
OBJDIR = obj/Debug
DEFINES += -DDEBUG -D_DEFAULT_SOURCE
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -g -std=c2x -Wall -Wextra -pedantic -ggdb
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -g -std=c2x -Wall -Wextra -pedantic -ggdb
LIBS += -lSDL2 -lSDL2_ttf -lSDL2_image -lm -lfontconfig
ALL_LDFLAGS += $(LDFLAGS)

else ifeq ($(config),release)
TARGETDIR = Release
TARGET = $(TARGETDIR)/sdraw
OBJDIR = obj/Release
DEFINES += -DNDEBUG -D_DEFAULT_SOURCE
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -O2 -std=c2x -Wall -Wextra -pedantic -ggdb
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -O2 -std=c2x -Wall -Wextra -pedantic -ggdb
LIBS += -lSDL2 -lSDL2_ttf -lSDL2_image -lm -lfontconfig
ALL_LDFLAGS += $(LDFLAGS) -s

else ifeq ($(config),mingw)
TARGETDIR = Mingw
TARGET = $(TARGETDIR)/sdraw.exe
OBJDIR = obj/Mingw
DEFINES += -DNDEBUG -Dmain=SDL_main -D_DEFAULT_SOURCE
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -O2 -std=c2x -Wall -Wextra -pedantic -ggdb
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -O2 -std=c2x -Wall -Wextra -pedantic -ggdb
LIBS += -lmingw32 -lSDL2main -lcomdlg32 -lole32 -lSDL2 -lSDL2_ttf -lSDL2_image -lm -lfontconfig
ALL_LDFLAGS += $(LDFLAGS) -mwindows -s

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/font.o
GENERATED += $(OBJDIR)/main.o
GENERATED += $(OBJDIR)/tinyfiledialogs.o
OBJECTS += $(OBJDIR)/font.o
OBJECTS += $(OBJDIR)/main.o
OBJECTS += $(OBJDIR)/tinyfiledialogs.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking sdraw
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning sdraw
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) rmdir /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CC) -x c-header $(ALL_CFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/font.o: font.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/main.o: main.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/tinyfiledialogs.o: tinyfiledialogs.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif